"""Initial migration

Revision ID: a2a46dc373c0
Revises: 
Create Date: 2025-06-04 20:58:14.950636

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = 'a2a46dc373c0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('max_risk_percentage', sa.Float(), nullable=False),
    sa.Column('max_active_trades', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('monthly_performance_summary',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('month', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('total_trades', sa.Integer(), nullable=False),
    sa.Column('winning_trades', sa.Integer(), nullable=False),
    sa.Column('losing_trades', sa.Integer(), nullable=False),
    sa.Column('win_rate', sa.Float(), nullable=False),
    sa.Column('total_pnl', sa.Float(), nullable=False),
    sa.Column('account_growth', sa.Float(), nullable=False),
    sa.Column('best_trade_symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('best_trade_pnl', sa.Float(), nullable=True),
    sa.Column('best_trade_what_worked', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('worst_trade_symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('worst_trade_pnl', sa.Float(), nullable=True),
    sa.Column('worst_trade_what_went_wrong', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lessons', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('goals', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('account_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_identified', sa.DateTime(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=True),
    sa.Column('setup_type', sa.Enum('BREAKOUT', 'RETEST', 'FLAG', 'TRIANGLE', 'PULLBACK', 'OTHER', name='setuptype'), nullable=True),
    sa.Column('timeframe', sa.Enum('Timeframe'), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('key_resistance', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('key_support', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pattern_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('volume_analysis', sa.Enum('INCREASING', 'DECREASING', 'BREAKOUT', 'UNKNOWN', name='volumeanalysis'), nullable=True),
    sa.Column('ma_position', sa.Enum('ABOVE_20MA', 'BELOW_20MA', 'ABOVE_50MA', 'BELOW_50MA', 'UNKNOWN', name='maposition'), nullable=True),
    sa.Column('trend_direction', sa.Enum('UP', 'DOWN', 'SIDEWAYS', 'UNKNOWN', name='trenddirection'), nullable=True),
    sa.Column('primary_entry_strategy', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('entry_price_target', sa.Float(), nullable=True),
    sa.Column('alternative_entry', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('position_size', sa.Integer(), nullable=True),
    sa.Column('stop_loss', sa.Float(), nullable=True),
    sa.Column('risk_reward_ratio', sa.Float(), nullable=True),
    sa.Column('target1', sa.Float(), nullable=True),
    sa.Column('target2', sa.Float(), nullable=True),
    sa.Column('trailing_stop_plan', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('exit_strategy', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reasoning_1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reasoning_2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reasoning_3', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('what_could_go_wrong', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('catalysts', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('WATCHING', 'ENTERED', 'EXITED', name='tradestatus'), nullable=False),
    sa.Column('entry_time', sa.DateTime(), nullable=True),
    sa.Column('entry_price', sa.Float(), nullable=True),
    sa.Column('exit_time', sa.DateTime(), nullable=True),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('pnl', sa.Float(), nullable=True),
    sa.Column('lessons_learned', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('account_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trade')
    op.drop_table('monthly_performance_summary')
    op.drop_table('account')
    # ### end Alembic commands ###
